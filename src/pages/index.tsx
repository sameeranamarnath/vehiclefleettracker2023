
import { Vendors,Vendor} from "@/api/types";
import { getVendors } from "@/api/vendors";
import { vendorsSort } from "@/common/utils";
import Main from "@/components/main";
import MapComponent from "@/components/map";
import Head from "next/head";

interface HomeProps {
  initVendors: Vendors;
}

export default function Home({ initVendors }: HomeProps) {
  console.log(initVendors);
  return (
    <>
      <Head>
        <title>Vendors</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main initVendors={initVendors} />
    </>  )
}

export async function getStaticProps() {
  let vendors: Vendors | Error;
  

  try {
    vendors = await getVendors<Vendors>(14);
    vendors.Items = vendorsSort(vendors.Items);
  } catch(e) {
    if (e instanceof Error) {
      // Return empty vendors
      vendors = { Items: [], count: 0, lastEvaluatedKey: null }
    } else {
      throw new Error('getVendors  Error while retrieving');
    }
  }

  return {
    props: {
      initVendors: vendors
    },
    revalidate: 60, //cache update of vendors optimisation
  }
}